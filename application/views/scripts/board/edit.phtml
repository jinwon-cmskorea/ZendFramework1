<?php
$this->headTitle('게시글 수정');

$fileArray = $this->boardFiles;
$board = $this->board;
if (Zend_Session::namespaceGet('formData')) {
    $formData = Zend_Session::namespaceGet('formData');
}
?>
<script type="text/javascript">
    $(document).ready(function() {
        <?php if (isset($this->editResult)) : ?>
            var editResult = <?php echo $this->editResult ? 'true' : 'false'; ?>;
            var editMessage = "<?php echo $this->editMessage; ?>";
            var editNotBoard = "<?php echo $this->editNotBoard ? $this->editNotBoard : ''; ?>";
            
            if (!editResult && editMessage != '') {
                alert(editMessage);
            } else if (!editResult && editNotBoard != '') {
                alert(editNotBoard);
                window.location.href = "<?php echo $this->url(array('controller' => 'board', 'action' => 'list')); ?>";
            } else if (editResult) {
                window.location.href = "<?php echo $this->url(array('controller' => 'board', 'action' => 'list')); ?>?message=editSuccess";
            }
        <?php endif; ?>
        <?php if (isset($formData)) : ?>
            var title = "<?php echo $formData['data']['title']; ?>";
            var content = "<?php echo str_replace(array("\r\n", "\r", "\n"), '\n', addslashes($formData['data']['content'])); ?>";
            var writer = "<?php echo $formData['data']['writer']; ?>";
            
            $('#title').val(title);
            $('#content').val(content);
            $('#writer').val(writer);
        <?php endif; ?>
        //작성자 css 클래스 속성 제거
        $('#writer').removeClass('input-writer');
    
        $('#cancle').on('click', function() {
            window.location.href = "<?php echo $this->url(array('controller' => 'board', 'action' => 'list')); ?>";
        });
    
        $('#MAX_FILE_SIZE').attr('value', 1024 * 1024 * 3 + 1);
    
        var fileCount = 1;
        //파일 업로드 칸 추가
        $('.add-file-element').on('click', function() {
            //파일 업로드 요소 복제(clone)
            var copy = $('.file-element' + fileCount).clone();
            //클래스 옆에번호를 증가시킨 뒤, 이전  파일 요소 뒤에 추가
            copy.prop("class", 'form-group file-element' + (fileCount + 1)).insertAfter('.file-element' + fileCount);
            copy.children('input[name=uploadFile' + fileCount + ']').attr('name', 'uploadFile' + (fileCount + 1));
            copy.children('label[for=uploadFile' + fileCount + ']').attr('for', 'uploadFile' + (fileCount + 1));
            //input 내부에 파일이 있는 경우를 대비해 내부를 비워줌
            copy.children('input[name=uploadFile' + (fileCount + 1) + ']').val("");
            copy.children('.remove-file-element' + fileCount).attr('class', 'remove-file-element' + (fileCount + 1));
            $('.remove-file-element' + fileCount).hide();
            $('.remove-file-element' + (fileCount + 1)).show();
            fileCount = fileCount + 1;
        });
        //x 버튼 누를 시, 파일 업로드 칸 제거
        $(document).on('click', '[name*=remove-file]', function() {
            if (fileCount == 1) {
                alert('삭제할 수 없습니다.');
                return false;
            }
            //버튼을 누른 부모 요소의 자식 요소들 삭제
            $(this).parent('.file-element' + fileCount).empty();
            //부모 요소까지 삭제
            $('.file-element' + fileCount).remove();
            fileCount = fileCount - 1;
            //fileCount가 2 이상이면 삭제 버튼이 뜨도록 유지, 1이면 버튼 display none
            if (fileCount > 1) {
                $('.remove-file-element' + fileCount).show();
            } else if (fileCount == 1) {
                $('.remove-file-element' + fileCount).hide();
            }
        });
        
        //파일명 옆 x버튼 누를시, 파일 삭제
        $('.del-file-btn').on('click', function() { 
            var filePk = $(this).data('filePk');
            var title = $('#title').val();
            var content = $('#content').val();
            var writer = $('#writer').val();
            
            if (confirm("첨부파일을 삭제하시겠습니까?")) {
                $.ajax({
                    url: "/board/file-delete",
                    method: "POST",
                    data: {"filePk" : filePk, "title" : title, "content" : content, "writer" : writer},
                    dataType: "json",
                    success: function(receive) {
                        if (receive.result == true) {
                            alert(receive.message);
                            window.location.reload();
                        } else {
                            alert(receive.message);
                        }
                    },
                    error: function() {
                        alert(receive.message);
                    }
                });
            }
        });
        
        $('.edit-form').on('submit', function() {
            var title = $('#title').val();
            var content = $('#content').val();
            var writer = $('#writer').val();
            //이름 정규식
            var writerReg = /[가-힣A-Za-z]+$/;
            
            if (!title || !content || !writer) {
                alert('제목, 내용, 작성자 는 필수사항입니다.');
                return false;
            }
            
            if (!writerReg.test(writer)) {
                alert('이름은 한글, 영문만 입력할 수 있습니다.');
                return false;
            }
            
            $('.edit-form').submit();
        });
    });
</script>
<style type="text/css">
.list-title strong {
    color: #595959;
}

.list-title small {
    color: #8497B0;
}

/*bootstrap3 input file 요소의  display 속성 무효*/
input[type="file"] {
    display: inline;
}

#remove-file {
    display: none;
}
</style>
<div class="col-sm-12">
    <div class="list-title">
        <strong>씨엠에스코리아 게시판</strong>
        <small>- 수정 -</small>
    </div>
    <div class="col-sm-12 list-descript">
        게시판 글을 수정합니다.
    </div>
</div>
<div class="edit-body">
    <form class="edit-form" enctype="multipart/form-data" method="<?php echo $this->boardForm->getMethod(); ?>">
        <?php echo $this->boardForm->boardPk; ?>
        <?php echo $this->boardForm->title; ?>
        <?php echo $this->boardForm->content; ?>
        
        <div class="file-div">
            <div class="file-list">
            <?php 
                //작성된 게시물에 첨부되어있는 파일 불러오기
                if ($fileArray) {
                    foreach ($fileArray as $file) {
                        echo "<div class='file-name'>ㆍ {$file['filename']} <input class='del-file-btn' type='button' value='X' data-file-pk=\"{$file['pk']}\"></div>";
                    }
                }
            ?>
                
            </div>
        </div>
        
        <?php echo $this->boardForm->writer; ?>
        <div class="form-group file-element1">
            <?php echo $this->boardForm->uploadFile; ?>
            <?php echo $this->FormButton('remove-file', 'X', array('class' => 'remove-file-element1')); ?>
        </div>
        <?php echo $this->FormButton('add-file', '+', array('class' => 'add-file-element')); ?>
        <div class="time-info2">
             <div class="time-title edit-time-float">마지막 수정시간 : &nbsp;</div>
             <div class="edit-time-diplay"><?php echo $board['updateTime']; ?></div>
        </div>
        <?php echo $this->boardForm->btns; ?>
    </form>
</div>